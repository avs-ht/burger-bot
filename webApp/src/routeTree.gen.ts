/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as IndexImport } from './app/routes/index'
import { Route as ProfileIndexImport } from './app/routes/profile/index'
import { Route as PolicyIndexImport } from './app/routes/policy/index'
import { Route as OrderIndexImport } from './app/routes/order/index'
import { Route as ContactsIndexImport } from './app/routes/contacts/index'
import { Route as CartIndexImport } from './app/routes/cart/index'
import { Route as BookIndexImport } from './app/routes/book/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const PolicyIndexRoute = PolicyIndexImport.update({
  path: '/policy/',
  getParentRoute: () => rootRoute,
} as any)

const OrderIndexRoute = OrderIndexImport.update({
  path: '/order/',
  getParentRoute: () => rootRoute,
} as any)

const ContactsIndexRoute = ContactsIndexImport.update({
  path: '/contacts/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const BookIndexRoute = BookIndexImport.update({
  path: '/book/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/book/': {
      preLoaderRoute: typeof BookIndexImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/contacts/': {
      preLoaderRoute: typeof ContactsIndexImport
      parentRoute: typeof rootRoute
    }
    '/order/': {
      preLoaderRoute: typeof OrderIndexImport
      parentRoute: typeof rootRoute
    }
    '/policy/': {
      preLoaderRoute: typeof PolicyIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  BookIndexRoute,
  CartIndexRoute,
  ContactsIndexRoute,
  OrderIndexRoute,
  PolicyIndexRoute,
  ProfileIndexRoute,
])

/* prettier-ignore-end */
